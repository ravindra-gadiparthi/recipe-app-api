from unittest.mock import patchfrom django.db.utils import OperationalErrorfrom django.core.management import call_commandfrom django.test import TestCaseclass CallCommandsTestCase(TestCase):    """Testing Call Commands"""    def test_wait_for_db_ready(self):        """Test wait for database is available"""        with patch('django.db.utils.ConnectionHandler.__getitem__') as getitem:            getitem.return_value = True            call_command('wait_for_db')            self.assertEqual(getitem.call_count, 1)    @patch('time.sleep', return_value=None)    def test_wait_for_db(self, ts):        """Test waiting for database"""        with patch('django.db.utils.ConnectionHandler.__getitem__') as getitem:            getitem.side_effect = [OperationalError] * 5 + [True]            call_command('wait_for_db')            self.assertEqual(getitem.call_count, 6)